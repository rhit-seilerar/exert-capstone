from dataclasses import dataclass

COSI: str

class VolatilitySymbol:
    def addr(self) -> int: ...
    def value(self) -> int: ...
    def name(self) -> str: ...

@dataclass
class VolatilityStructField:
    name: str
    offset: int
    type_name: str

class VolatilityStruct:
    def get_field_by_index(self, index: int) -> str: ...
    def name(self) -> str: ...
    def offset_of_field(self, name: str) -> int: ...
    def type_of_field(self, name: str) -> str: ...
    def size(self) -> int: ...

class VolatilityBaseType:
    def name(self) -> str: ...
    def size(self) -> int: ...
    def is_signed(self) -> bool: ...

class Cosi:
    def symbol_addr_from_name(self, name: str) -> int: ...
    def symbol_value_from_name(self, name: str) -> int: ...
    def symbol_from_name(self, name: str) -> VolatilitySymbol: ...
    def base_type_from_name(self, name: str) -> VolatilityBaseType: ...
    def type_from_name(self, name: str) -> VolatilityStruct: ...
    def per_cpu_offset(self) -> int: ...
    def find_per_cpu_address(self, symbol: str) -> int: ...

class CosiFiles:
    def __del__(self) -> None: ...
    def __len__(self) -> int: ...

class CosiFile:
    def get_name(self) -> str: ...

class CosiThread:
    def __del__(self) -> None: ...

class CosiProcess:
    def __del__(self) -> None: ...

class CosiProcList:
    def __del__(self) -> None: ...
    def __len__(self) -> int: ...

class CosiModule:
    def __del__(self) -> None: ...

class CosiMappings:
    def __del__(self) -> None: ...
    def __len__(self) -> int: ...

class CosiGuestPointer:
    def null_terminated(self) -> str: ...
    def get_raw_ptr(self) -> int: ...
