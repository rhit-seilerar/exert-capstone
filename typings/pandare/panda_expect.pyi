from _typeshed import Incomplete
from colorama import Fore as Fore, Style as Style

class TimeoutExpired(Exception): ...

class Expect:
    name: Incomplete
    logfile: Incomplete
    fd: Incomplete
    prior_lines: Incomplete
    current_line: Incomplete
    last_msg: Incomplete
    running: bool
    cleared: bool
    consumed_first: Incomplete
    use_unansi: Incomplete
    def __init__(self, name, filelike: Incomplete | None = None, expectation: Incomplete | None = None, logfile_base: Incomplete | None = None, consume_first: bool = False, unansi: bool = False) -> None: ...
    last_prompt: Incomplete
    expectation_re: Incomplete
    expectation_ends_re: Incomplete
    def update_expectation(self, expectation) -> None: ...
    def set_logging(self, name) -> None: ...
    poller: Incomplete
    def connect(self, filelike) -> None: ...
    def is_connected(self): ...
    def __del__(self) -> None: ...
    def abort(self) -> None: ...
    def consume_partial(self): ...
    def get_partial(self): ...
    def unansi(self) -> None: ...
    def expect(self, expectation: Incomplete | None = None, timeout: int = 30): ...
    def send(self, msg) -> None: ...
    def send_eol(self) -> None: ...
    def sendline(self, msg: bytes = b'') -> None: ...
