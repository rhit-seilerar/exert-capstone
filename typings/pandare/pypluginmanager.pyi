from _typeshed import Incomplete
from pandare import PyPlugin as PyPlugin

class _DotGetter:
    data: Incomplete
    def __init__(self, data: Incomplete | None = None) -> None: ...
    # def set(self, k, v) -> None: ...
    # def __getattr__(self, name) -> None: ...

class _PppFuncs(_DotGetter):
    def __enter__(self): ...
    def __exit__(self, *exc): ...
    def __getattr__(self, name): ...

class _PppPlugins(_DotGetter):
    def __getattr__(self, name): ...
    # def add(self, plugin_name, func_name, func) -> None: ...

class PyPluginManager:
    panda: Incomplete
    plugins: Incomplete
    silence_warning: Incomplete
    flask: Incomplete
    port: Incomplete
    host: Incomplete
    app: Incomplete
    blueprint: Incomplete
    flask_thread: Incomplete
    @property
    def ppp(self): ...
    def enable_flask(self, host: str = '127.0.0.1', port: int = 8080) -> None: ...
    def load_plugin_class(self, plugin_file, class_names): ...
    def unload_all(self): ...
    def is_loaded(self, pluginclass): ...
    def get_plugin(self, pluginclass): ...
    def serve(self) -> None: ...
